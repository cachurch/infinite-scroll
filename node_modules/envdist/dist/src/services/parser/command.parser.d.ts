export declare type ArgumentValue = string | boolean | undefined;
export interface IMap<T> {
    [key: string]: T;
}
export declare class ArgumentCollection {
    private readonly commandName;
    private readonly args;
    private readonly flags;
    constructor(commandName: string);
    get(name: string): ArgumentValue;
    isExistsArgument(name: string): boolean;
    isExistsFlag(name: string): boolean;
    get command(): string;
    addFlag(name: string): this;
    add(name: string, value: ArgumentValue): this;
}
export declare class CommandParser {
    bool: string[];
    regex: {
        command: RegExp;
        argumentName: RegExp;
        quotedValue: RegExp;
        flag: RegExp;
    };
    parse(line: string): ArgumentCollection;
}
